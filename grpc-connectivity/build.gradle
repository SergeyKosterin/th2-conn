/*
 * Copyright 2020-2020 Exactpro (Exactpro Systems Limited)
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.google.protobuf'
apply plugin: 'com.jfrog.artifactory'
apply plugin: "com.exactpro.th2.service-generator"

buildscript {
    ext {
        sharedDir                       = file("${project.rootDir}/shared")
    }

    repositories {
        //FIXME: in future use only artifactory
        maven {
            name 'MavenLocal'
            url sharedDir
        }
        mavenCentral()
        maven {
            name 'Artifactory snapshot'
            url 'http://artifactory5.exp.exactpro.com/artifactory/libs-snapshot'
        }
        mavenLocal()
    }
    dependencies {
        classpath "com.exactpro.th2:service-generator:1.3.1"
    }
}

ext {
    grpcVersion         = '1.27.1'
    protobufVersion     = '3.11.0'

    genDir              = file('src/gen')
}

sourceCompatibility = 1.11
targetCompatibility = 1.11

dependencies {
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "io.grpc:grpc-core:${grpcVersion}"

    compile "com.exactpro.th2:th2-grpc-infra:${th2CommonVersion}"

    compile "com.exactpro.th2:service-generator:1.3.1"
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java', 'src/gen/main/java', 'src/gen/main/grpc', 'src/gen/main/antlr'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"

    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks.generatedFilesBaseDir = genDir
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
        ofSourceSet('main')
    }
}

compileJava.dependsOn.add('generateProto')
generateServices.dependsOn.add('generateProto')
compileJava.dependsOn.add('generateServices')

serviceGeneration {
    settings {
        protoDir = "./src/main/proto/th2"
        outDir = "./src/gen/main/antlr"
    }
}

task zipProtobuf (type: Zip) {
    classifier 'protobuf'

    from sourceSets.main.proto.srcDirs
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'th2-grpc-connectivity'

            from components.java
            artifact source: zipProtobuf, extension: 'zip'
        }
    }

    repositories {
        maven {
            name = 'localRepo'
            url = sharedDir
        }
    }
}

artifactoryPublish.skip = false

clean {
    delete genDir
}
